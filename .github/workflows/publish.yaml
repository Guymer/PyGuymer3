# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Publish

on: [push]

jobs:
    build:
        name: Build distribution
        runs-on: ubuntu-24.04
        strategy:
            matrix:
                python-version: ["3.11", "3.12", "3.13"]
        steps:
            -
                name: Checkout project
                uses: actions/checkout@v5                                       # https://github.com/actions/checkout
                with:
                    persist-credentials: false
                    submodules: true
            -
                name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v6                                   # https://github.com/actions/setup-python
                with:
                    cache: pip
                    cache-dependency-path: |
                        requirements.txt
                        docs/requirements.txt
                        pyguymer3/f90/fortranlib/requirements.txt
                    python-version: ${{ matrix.python-version }}
            -
                name: Install Python ${{ matrix.python-version }} dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt
                    pip install -r docs/requirements.txt
                    pip install -r pyguymer3/f90/fortranlib/requirements.txt
                    pip install git+https://github.com/VACUMM/sphinx-fortran.git@master
                    pip install build
            -
                name: List programs
                run: |
                    echo "::notice $(which pip)"
                    echo "::notice $(which python)"
            -
                name: Build a binary wheel and a source tarball
                run: |
                    python -m build
            -
                name: Upload the distribution packages
                uses: actions/upload-artifact@v4                                # https://github.com/actions/upload-artifact
                with:
                    name: python-package-distributions (Python ${{ matrix.python-version }})
                    path: dist/
                    compression-level: 9
    publish-to-pypi:
        name: Publish distribution to PyPI
        if: startsWith(github.ref, 'refs/tags/')                                # Only publish to PyPI on tag pushes.
        needs:
            - build
        runs-on: ubuntu-24.04
        environment:
            name: pypi
            url: https://pypi.org/p/PyGuymer3
        permissions:
            id-token: write                                                     # Mandatory for trusted publishing.
        steps:
            -
                name: Download the distribution packages
                uses: actions/download-artifact@v5                              # https://github.com/actions/download-artifact
                with:
                    name: python-package-distributions (Python 3.11)
                    path: dist/
            -
                name: Publish distribution to PyPI
                uses: pypa/gh-action-pypi-publish@release/v1                    # https://github.com/pypa/gh-action-pypi-publish
    github-release:
        name: Release distribution on GitHub
        if: startsWith(github.ref, 'refs/tags/')                                # Only publish to GitHub on tag pushes.
        needs:
            - publish-to-pypi
        runs-on: ubuntu-24.04
        permissions:
            contents: write                                                     # Mandatory for making GitHub Releases.
            id-token: write                                                     # Mandatory for Sigstore.
        steps:
            -
                name: Download the distribution packages
                uses: actions/download-artifact@v5                              # https://github.com/actions/download-artifact
                with:
                    name: python-package-distributions (Python 3.11)
                    path: dist/
            -
                name: Sign distribution with Sigstore
                uses: sigstore/gh-action-sigstore-python@v3.0.0                 # https://github.com/sigstore/gh-action-sigstore-python
                with:
                    inputs: >-
                        ./dist/*.tar.gz
                        ./dist/*.whl
            -
                name: Create GitHub Release
                env:
                    GITHUB_TOKEN: ${{ github.token }}
                run: |
                    gh release create "${GITHUB_REF_NAME}" --repo "${GITHUB_REPOSITORY}" --notes ""
            -
                name: Upload artifact signatures to GitHub Release
                env:
                    GITHUB_TOKEN: ${{ github.token }}
                # Upload to GitHub Release using the "gh" CLI. "dist/" contains
                # the built packages, and the Sigstore-produced signatures and
                # certificates.
                run: |
                    gh release upload "${GITHUB_REF_NAME}" dist/** --repo "${GITHUB_REPOSITORY}"
