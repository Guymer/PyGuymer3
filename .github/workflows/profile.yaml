name: Profile

on: [push]

jobs:
    build:
        if: startsWith(github.ref, 'refs/tags/')                                # Only profile on tag pushes.
        runs-on: ubuntu-24.04
        strategy:
            matrix:
                python-version: ["3.11", "3.12", "3.13"]
        steps:
            -
                name: Checkout project
                uses: actions/checkout@v5                                       # https://github.com/actions/checkout
                with:
                    path: main
                    submodules: true
            -
                name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v6                                   # https://github.com/actions/setup-python
                with:
                    cache: pip
                    cache-dependency-path: |
                        main/requirements.txt
                        main/docs/requirements.txt
                        main/pyguymer3/f90/fortranlib/requirements.txt
                    python-version: ${{ matrix.python-version }}
            -
                name: Install Python dependencies
                run: |
                    sudo apt-get update
                    sudo apt-get install exiftool
                    sudo apt-get install ffmpeg
                    sudo apt-get install optipng
            -
                name: Install Python ${{ matrix.python-version }} dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install -r main/requirements.txt
                    pip install -r main/docs/requirements.txt
                    pip install -r main/pyguymer3/f90/fortranlib/requirements.txt
                    pip install git+https://github.com/VACUMM/sphinx-fortran.git@master
            -
                name: List programs
                run: |
                    echo "::notice $(which exiftool)"
                    echo "::notice $(which ffmpeg)"
                    echo "::notice $(which ffprobe)"
                    echo "::notice $(which gfortran)"
                    echo "::notice $(which gmake)"
                    echo "::notice $(which optipng)"
                    echo "::notice $(which pip)"
                    echo "::notice $(which python)"
            -
                name : Set up environment for Python
                run : |
                    echo "PYTHONPATH=${PWD}/main:${PYTHONPATH}" >> ${GITHUB_ENV}
                    echo "PYTHONSAFEPATH=aNonEmptyString" >> ${GITHUB_ENV}
            -
                name: Profile the Python ${{ matrix.python-version }} code
                run: |
                    cd main
                    gmake -r -C pyguymer3/f90 FC=`which gfortran` PYTHON3=`which python` compile
                    python -m cProfile -o cProfile0.log tests/animateBufferPoint.py --absolute-path-to-repository ${{ runner.temp }} --dont-make-plots --quiet
                    python -m cProfile -o cProfile1.log tests/animateExpandPoint.py --absolute-path-to-repository ${{ runner.temp }} --dont-make-plots --quiet
                    python -m cProfile -o cProfile2.log tests/buffer.py --absolute-path-to-repository ${{ runner.temp }} --dont-make-plots --quiet
                    python -m cProfile -o cProfile3.log tests/bufferPoint.py --absolute-path-to-repository ${{ runner.temp }} --dont-make-plots --quiet
                    python -m cProfile -o cProfile4.log tests/fillin.py --absolute-path-to-repository ${{ runner.temp }} --dont-make-plots --quiet
                    python -m cProfile -o cProfile5.log tests/findMiddleOfLocs.py --absolute-path-to-repository ${{ runner.temp }} --dont-make-plots --quiet
                    python -m cProfile -o cProfile6.log tests/greatCircle.py --absolute-path-to-repository ${{ runner.temp }} --dont-make-plots --quiet
                    python -m cProfile -o cProfile7.log -m unittest unitTests.py
                    python -c 'import pstats; p = pstats.Stats(); p.add("cProfile0.log"); p.add("cProfile1.log"); p.add("cProfile2.log"); p.add("cProfile3.log"); p.add("cProfile4.log"); p.add("cProfile5.log"); p.add("cProfile6.log"); p.add("cProfile7.log"); p.sort_stats(pstats.SortKey.CUMULATIVE).print_stats("pyguymer3/pyguymer3", 25)'
